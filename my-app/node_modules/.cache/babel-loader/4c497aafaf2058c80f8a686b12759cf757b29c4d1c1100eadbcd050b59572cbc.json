{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nlet store = {\n  _state: {\n    profilePage: {\n      postsData: [{\n        id: 1,\n        post: 'How are you?',\n        likeCount: '5'\n      }, {\n        id: 2,\n        post: 'It\\'s my first test!',\n        likeCount: '0'\n      }, {\n        id: 3,\n        post: 'All right?',\n        likeCount: '777'\n      }, {\n        id: 4,\n        post: 'What are you doing?',\n        likeCount: '1000'\n      }],\n      newPostText: 'NikArt Yohhoo!'\n    },\n    messagePage: {\n      dialogData: [{\n        id: 1,\n        name: 'NikArt'\n      }, {\n        id: 2,\n        name: 'Andrey'\n      }, {\n        id: 3,\n        name: 'Anya'\n      }, {\n        id: 4,\n        name: 'Mama'\n      }],\n      messageData: [{\n        id: 1,\n        message: 'Hi???'\n      }, {\n        id: 2,\n        message: 'Good!'\n      }, {\n        id: 3,\n        message: 'All right?'\n      }, {\n        id: 4,\n        message: 'Welcome !!!'\n      }],\n      newMessageBody: ''\n    }\n  },\n  _callSubscriber() {},\n  getState() {\n    return this._state;\n  },\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        post: this._state.profilePage.newPostText,\n        likeCount: '0'\n      };\n      this._state.profilePage.postsData.push(newPost);\n      this._state.profilePage.newPostText = '';\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.messagePage.newMessageBody = action.body;\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.messagePage.newMessageBody;\n      this._state.messagePage.newMessageBody = '';\n      this._state.messagePage.messageData.push({\n        id: 6,\n        message: body\n      });\n      this._callSubscriber(this._state);\n    }\n  }\n};\nexport const sendMessageCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const addPostActionCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageBodyCreator = body => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body: body\n});\nexport default store;\nwindow.state = store;","map":{"version":3,"names":["ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","postsData","id","post","likeCount","newPostText","messagePage","dialogData","name","messageData","message","newMessageBody","_callSubscriber","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","body","sendMessageCreator","updateNewPostTextActionCreator","text","addPostActionCreator","updateNewMessageBodyCreator","window","state"],"sources":["/Users/nikolai/WebstormProjects/01_react/my-app/src/redux/state.js"],"sourcesContent":["const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet store = {\n    _state: {\n        profilePage: {\n            postsData: [\n                {id: 1, post: 'How are you?', likeCount: '5'},\n                {id: 2, post: 'It\\'s my first test!', likeCount: '0'},\n                {id: 3, post: 'All right?', likeCount: '777'},\n                {id: 4, post: 'What are you doing?', likeCount: '1000'}\n            ],\n            newPostText: 'NikArt Yohhoo!'\n        },\n        messagePage: {\n            dialogData: [\n                {id: 1, name: 'NikArt'},\n                {id: 2, name: 'Andrey'},\n                {id: 3, name: 'Anya'},\n                {id: 4, name: 'Mama'}\n            ],\n            messageData: [\n                {id: 1, message: 'Hi???'},\n                {id: 2, message: 'Good!'},\n                {id: 3, message: 'All right?'},\n                {id: 4, message: 'Welcome !!!'}\n            ],\n            newMessageBody: ''\n        }\n    },\n    _callSubscriber(){\n\n    },\n\n    getState() {\n        return this._state;\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    },\n\n    dispatch(action) {\n        if (action.type === ADD_POST) {\n            let newPost = {\n                id: 5,\n                post: this._state.profilePage.newPostText,\n                likeCount: '0'\n            };\n            this._state.profilePage.postsData.push(newPost);\n            this._state.profilePage.newPostText = '';\n            this._callSubscriber(this._state);\n        } else if (action.type === UPDATE_NEW_POST_TEXT) {\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state);\n        } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n            this._state.messagePage.newMessageBody = action.body;\n            this._callSubscriber(this._state);\n        } else if (action.type === SEND_MESSAGE) {\n            let body = this._state.messagePage.newMessageBody;\n            this._state.messagePage.newMessageBody = '';\n            this._state.messagePage.messageData.push({id: 6, message: body});\n            this._callSubscriber(this._state);\n        }\n    }\n}\n\nexport const sendMessageCreator = () => ({type: ADD_POST})\nexport const updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text})\n\nexport const addPostActionCreator = () => ({type: SEND_MESSAGE})\nexport const updateNewMessageBodyCreator = (body) => ({type: UPDATE_NEW_MESSAGE_BODY, body: body})\n\nexport default store;\nwindow.state = store;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/nikolai/WebstormProjects/01_react/my-app/src/components/Profile/MyPosts/MyPosts.jsx\";\nimport React from \"react\";\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../../redux/state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPosts = props => {\n  let state = props.store.getState().profilePage;\n  debugger;\n  // let postsElements = props.postsData.map(posts => <Post message={posts.post} likesCount={posts.likeCount} />);\n  let postsElements = state.postsData.map(posts => /*#__PURE__*/_jsxDEV(Post, {\n    message: posts.post,\n    likesCount: posts.likeCount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 54\n  }, this));\n  let newPostEl = /*#__PURE__*/React.createRef();\n  let addPost = () => {\n    props.dispatch({\n      type: 'ADD-POST'\n    });\n  };\n  let onPostChange = () => {\n    let text = newPostEl.current.value;\n    props.dispatch({\n      type: 'UPDATE-NEW-POST-TEXT',\n      text: text\n    });\n  };\n  let onSendMessageClick = () => {\n    props.store.dispatch(sendMessageCreator());\n  };\n  let onNewMessageChange = event => {\n    let body = event.target.value;\n    props.store.dispatch(updateNewMessageBodyCreator(body));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: onPostChange,\n          ref: newPostEl,\n          value: props.newPostText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPost,\n          children: \"Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.posts,\n      children: postsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPosts;\nexport default MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","s","Post","type","sendMessageCreator","updateNewMessageBodyCreator","MyPosts","props","state","store","getState","profilePage","postsElements","postsData","map","posts","post","likeCount","newPostEl","createRef","addPost","dispatch","onPostChange","text","current","value","onSendMessageClick","onNewMessageChange","event","body","target","postsBlock","newPostText"],"sources":["/Users/nikolai/WebstormProjects/01_react/my-app/src/components/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import React from \"react\";\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {type} from \"@testing-library/user-event/dist/type\";\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../../redux/state\";\n\nconst MyPosts = (props) => {\n    let state = props.store.getState().profilePage;\n    debugger;\n    // let postsElements = props.postsData.map(posts => <Post message={posts.post} likesCount={posts.likeCount} />);\n    let postsElements = state.postsData.map(posts => <Post message={posts.post} likesCount={posts.likeCount} />);\n\n    let newPostEl = React.createRef();\n\n    let addPost = () => {\n        props.dispatch({type: 'ADD-POST'});\n    }\n\n    let onPostChange = () => {\n        let text = newPostEl.current.value;\n        props.dispatch({type: 'UPDATE-NEW-POST-TEXT', text: text});\n    }\n\n    let onSendMessageClick = () => {\n        props.store.dispatch(sendMessageCreator());\n    }\n\n    let onNewMessageChange = (event) => {\n        let body = event.target.value;\n        props.store.dispatch(updateNewMessageBodyCreator(body));\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My post</h3>\n            <div>\n                <div>\n                    <textarea onChange={onPostChange}\n                              ref={newPostEl}\n                              value={props.newPostText}  />\n                </div>\n                <div>\n                    <button onClick={ addPost }>Button</button>\n                </div>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,sBAAsB;AACpC,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAAQC,IAAI,QAAO,uCAAuC;AAC1D,SAAQC,kBAAkB,EAAEC,2BAA2B,QAAO,sBAAsB;AAAC;AAErF,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACvB,IAAIC,KAAK,GAAGD,KAAK,CAACE,KAAK,CAACC,QAAQ,EAAE,CAACC,WAAW;EAC9C;EACA;EACA,IAAIC,aAAa,GAAGJ,KAAK,CAACK,SAAS,CAACC,GAAG,CAACC,KAAK,iBAAI,QAAC,IAAI;IAAC,OAAO,EAAEA,KAAK,CAACC,IAAK;IAAC,UAAU,EAAED,KAAK,CAACE;EAAU;IAAA;IAAA;IAAA;EAAA,QAAG,CAAC;EAE5G,IAAIC,SAAS,gBAAGlB,KAAK,CAACmB,SAAS,EAAE;EAEjC,IAAIC,OAAO,GAAG,MAAM;IAChBb,KAAK,CAACc,QAAQ,CAAC;MAAClB,IAAI,EAAE;IAAU,CAAC,CAAC;EACtC,CAAC;EAED,IAAImB,YAAY,GAAG,MAAM;IACrB,IAAIC,IAAI,GAAGL,SAAS,CAACM,OAAO,CAACC,KAAK;IAClClB,KAAK,CAACc,QAAQ,CAAC;MAAClB,IAAI,EAAE,sBAAsB;MAAEoB,IAAI,EAAEA;IAAI,CAAC,CAAC;EAC9D,CAAC;EAED,IAAIG,kBAAkB,GAAG,MAAM;IAC3BnB,KAAK,CAACE,KAAK,CAACY,QAAQ,CAACjB,kBAAkB,EAAE,CAAC;EAC9C,CAAC;EAED,IAAIuB,kBAAkB,GAAIC,KAAK,IAAK;IAChC,IAAIC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACL,KAAK;IAC7BlB,KAAK,CAACE,KAAK,CAACY,QAAQ,CAAChB,2BAA2B,CAACwB,IAAI,CAAC,CAAC;EAC3D,CAAC;EAED,oBACI;IAAK,SAAS,EAAE5B,CAAC,CAAC8B,UAAW;IAAA,wBACzB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB;MAAA,wBACI;QAAA,uBACI;UAAU,QAAQ,EAAET,YAAa;UACvB,GAAG,EAAEJ,SAAU;UACf,KAAK,EAAEX,KAAK,CAACyB;QAAY;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QACrC,eACN;QAAA,uBACI;UAAQ,OAAO,EAAGZ,OAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAgB;QAAA;QAAA;QAAA;MAAA,QACzC;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,SAAS,EAAEnB,CAAC,CAACc,KAAM;MAAA,UACnBH;IAAa;MAAA;MAAA;MAAA;IAAA,QACZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KA5CKN,OAAO;AA8Cb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}